<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Spr_Idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>enum kingStates { 
    idle,
    run,
    attack,
    jump,
    hit
}

state = kingStates.idle;
// ABILITIES
spd = 3;
grav = 1;
moveX = 0;
moveY = 0;
jumpCounter = 0;
jumpMax = 2;
hp = 3;
attackCounter = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// CONTROLLER
switch (state) {
    case kingStates.idle:
        Scr_Idle();
        break;
    case kingStates.run:
        Scr_Run();
        break;
    case kingStates.jump:
        Scr_Jump();
        break;
    case kingStates.attack:
        Scr_Attack();
        break;
}

//PHYSICS
if (moveY &lt; 10) {
    moveY = min(moveY + grav,9);
}
//COLLISION
if (place_meeting(x ,y + moveY ,Obj_Ground)) {
    while (not place_meeting(x, y + sign(moveY), Obj_Ground)) {
        y += sign(moveY);
        jumpCounter = 0;
    }
    moveY = 0
}
if (place_meeting(x + moveX,y - 2,Obj_Ground)) {
    while (not place_meeting(x + sign(moveX), y - 2, Obj_Ground)) {
        x += sign(moveX);
    }
    moveX = 0
}

if (place_meeting(x + moveX,y - 2,Obj_Box)) {
    while (not place_meeting(x + sign(moveX), y - 2, Obj_Box)) {
        x += sign(movex);
    }
    moveX = 0
}
if (place_meeting(x ,y + moveY ,Obj_Box)) {
    while (not place_meeting(x, y + sign(moveY), Obj_Box)) {
        y += sign(moveY);
        jumpCounter = 0;
    }
    moveY = 0
}

// APPLY MOVEMENT
x += moveX
y += moveY

// SPRITE CONTROLLER
if (pressA + pressD != 0) {
    image_xscale = sign(pressD - pressA)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
